// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hookScript should match snapshot (OS X/Linux) 1`] = `
"#!/bin/sh
# husky

# Hook created by Husky
#   Version: 2.3.0
#   At: <locale date string>
#   See: https://github.com/typicode/husky#readme

# From
#   Directory: /home/typicode/projects/foo-package
#   Homepage: https://github.com/foo/foo-package

scriptPath=\\"node_modules/husky/run.js\\"
hookName=\`basename \\"$0\\"\`
gitParams=\\"$*\\"

debug() {
  [ \\"\${HUSKY_DEBUG}\\" = \\"true\\" ] || [ \\"\${HUSKY_DEBUG}\\" = \\"1\\" ] && echo \\"husky:debug $1\\"
}

debug \\"$hookName hook started...\\"

if ! command -v node >/dev/null 2>&1; then
  echo \\"Info: Can't find node in PATH, trying to find a node binary on your system\\"
fi


# Git hooks change the PWD to be the dir where the .git folder lives. GIT_PREFIX
# stores the original location of where the hook was executed from. This allows
# us to work out the original PWD.
gitCwd=\\"$GIT_PREFIX\\"
if [ ! -z \\"$gitCwd\\" ] then
  $gitCwd=\\"$PWD/$gitCwd\\"
  debug \\"Updating PWD: $gitCwd\\"
fi

if [ -f \\"$scriptPath\\" ]; then
  # if [ -t 1 ]; then
  #   exec < /dev/tty
  # fi
  if [ -f ~/.huskyrc ]; then
    debug \\"source ~/.huskyrc\\"
    . ~/.huskyrc
  fi
  node_modules/run-node/run-node \\"$scriptPath\\" $hookName \\"$gitParams\\" \\"$gitCwd\\"
else
  echo \\"Can't find Husky, skipping $hookName hook\\"
  echo \\"You can reinstall it using 'npm install husky --save-dev' or delete this hook\\"
fi
"
`;

exports[`hookScript should match snapshot (Windows) 1`] = `
"#!/bin/sh
# husky

# Hook created by Husky
#   Version: 2.3.0
#   At: <locale date string>
#   See: https://github.com/typicode/husky#readme

# From
#   Directory: /home/typicode/projects/foo-package
#   Homepage: https://github.com/foo/foo-package

scriptPath=\\"node_modules/husky/run.js\\"
hookName=\`basename \\"$0\\"\`
gitParams=\\"$*\\"

debug() {
  [ \\"\${HUSKY_DEBUG}\\" = \\"true\\" ] || [ \\"\${HUSKY_DEBUG}\\" = \\"1\\" ] && echo \\"husky:debug $1\\"
}

debug \\"$hookName hook started...\\"


# Git hooks change the PWD to be the dir where the .git folder lives. GIT_PREFIX
# stores the original location of where the hook was executed from. This allows
# us to work out the original PWD.
gitCwd=\\"$GIT_PREFIX\\"
if [ ! -z \\"$gitCwd\\" ] then
  $gitCwd=\\"$PWD/$gitCwd\\"
  debug \\"Updating PWD: $gitCwd\\"
fi

if [ -f \\"$scriptPath\\" ]; then
  # if [ -t 1 ]; then
  #   exec < /dev/tty
  # fi
  if [ -f ~/.huskyrc ]; then
    debug \\"source ~/.huskyrc\\"
    . ~/.huskyrc
  fi
  node \\"$scriptPath\\" $hookName \\"$gitParams\\" \\"$gitCwd\\"
else
  echo \\"Can't find Husky, skipping $hookName hook\\"
  echo \\"You can reinstall it using 'npm install husky --save-dev' or delete this hook\\"
fi
"
`;
